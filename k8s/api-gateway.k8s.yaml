apiVersion: apps/v1
kind: Deployment
metadata:
  name:  api-gateway-deployment
  namespace: default
  labels:
    app:  api-gateway
spec:
  selector:
    matchLabels:
      app: api-gateway
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  api-gateway
    spec:
      initContainers: 
      - name: init-offer-service
        image: busybox 
        command: ['sh','-c', 'until nslookup offer-service.default.svc.cluster.local; do echo waiting for offer service to come up; sleep 2; done;'] 

      - name: init-product-service
        image: busybox 
        command: ['sh','-c', 'until nslookup product-service.default.svc.cluster.local; do echo waiting for product service to come up; sleep 2; done;'] 

      - name: init-rabbitmq-service
        image: busybox 
        command: ['sh','-c', 'until nslookup rabbitmq-service.default.svc.cluster.local; do echo waiting for rabbitmq service to come up; sleep 2; done;'] 

      containers:
      - name:  api-gateway-container
        image: ghcr.io/jadonharsh109/istio-microservice-deployment-api:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        ports:
        - containerPort:  8000
          name:  api-gateway-port
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: default
  labels:
    app:  api-gateway
spec:
  ports:
  - protocol: TCP
    port: 8000
    targetPort: api-gateway-port
  selector:
    app: api-gateway
